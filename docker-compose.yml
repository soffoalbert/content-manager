version: '2'

networks:
  test:
    driver: bridge

services:
  content-manager-bff:
    build:
      context: ./services/content-manager-bff
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - authentication-service
      - notification-service
      - review-service
      - user-service
      - content-service
    links:
      - authentication-service
      - content-service
      - notification-service
      - review-service
      - user-service
    networks:
      - test

  authentication-service:
    build:
      context: ./services/authentication-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    hostname: authentication-service
    depends_on:
      - user-service
    links:
      - user-service
    entrypoint: ["yarn", "start"]
    networks:
      - test

  content-service:
    build:
      context: ./services/content-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    links:
      - content-db
    environment:
      POSTGRES_PORT: 5433
      POSTGRES_DB: content-db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 198920
      POSTGRES_HOST: content-db
    networks:
      - test

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    environment:
      NGROK_URL: ${NGROK_URL}
      AUTH_EMAIL_ACCOUNT_ADDRESS: test@gmail.com 
      AUTH_EMAIL_ACCOUNT_PASSWORD: 198920
    ports:
      - "3005:3005"
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    networks:
      - test
  review-service:
    build:
      context: ./services/review-service
      dockerfile: Dockerfile
    environment: 
      USER_SERVICE_HOST: user-service
      USER_SERVICE_PORT: 3002
      AUTHENTICATION_SERVICE_HOST: authentication-service
      AUTHENTICATION_SERVICE_PORT: 3001
      POSTGRES_HOST: review-db
      POSTGRES_PORT: 5436 
      POSTGRES_PASSWORD: 198920
      POSTGRES_DB: review-db
      POSTGRES_USER: root
    ports:
      - "3004:3004"
    depends_on:
      - user-service
      - content-service
      - notification-service
    links:
      - review-db
      - user-service
      - content-service
      - notification-service
    networks:
      - test

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    links:
      - user-db
    networks:
      - test
  user-db:
    image: postgres:latest
    command: ["-p", "5435"]
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 198920
      POSTGRES_DB: user-db
    ports:
      - "5435:5435"
    networks:
      - test
  content-db:
    image: postgres:latest
    command: ["-p", "5433"]
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 198920
      POSTGRES_DB: content-db
    ports:
      - "5433:5433"
    networks:
      - test
  review-db:
    image: postgres:latest
    command: ["-p", "5436"]
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 198920
      POSTGRES_DB: review-db
    ports:
      - "5436:5436"
    networks:
      - test
  rabbitmq:
    image: bitnami/rabbitmq:3.12
    ports:
      - '4369:4369'
      - '5551:5551'
      - '5552:5552'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    environment:
      - RABBITMQ_USERNAME=sofo
      - RABBITMQ_PASSWORD=198920
      - RABBITMQ_SECURE_PASSWORD=no
      - RABBITMQ_LOGS=-
    volumes:
      - 'rabbitmq_data:/bitnami/rabbitmq/mnesia'
    networks:
      - test

volumes:
  rabbitmq_data:
    driver: local
  nginx-conf: 
